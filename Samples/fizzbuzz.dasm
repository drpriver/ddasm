import io
import misc
function start 0
    move rbp rsp
    move r0 rsp
    move rout1 rarg1
    cmp rarg1 0
    cmov ne rip label validate

    add rsp rsp 80
    move rarg1 r0
    move rarg2 80
    move rarg3 "N (for fizzbuzz): "
    call function io.getline

    move rarg1 r0
    call function misc.atoi

    label validate

    # validate the input a bit
    move r1 rout1
    cmp r1 1
    jump ge label notsmall
    move rarg1 "Too Small!"
    call function io.puts
    halt

    label notsmall
    cmp r1 100000
    jump le label notbig
    move rarg1 "Too big!"
    call function io.puts
    halt

    label notbig
    move rarg1 r1
    add rarg1 rarg1 1
    move rarg2 1
    call function fizzbuzz
    halt
end

function fizzbuzz 1
        move     r7 rarg1
        move    r0 1

    label begin_loop
    # In this loop, we use r3 to track whether we have printed
    # a word or not.
        move    r3 0
        div     rjunk r1 r0 3
        cmp     r1 0
        move    rarg1 ""
        cmov eq rarg1 "\e[91mfizz"
        cmov eq r3 1
        call function io.printf1

        div     rjunk r1 r0 5
        cmp     r1 0
        move    rarg1 ""
        cmov eq rarg1 "\e[92mbuzz"
        cmov eq r3 1
        call function io.printf1
        cmp     r3 1
        jump eq 8

        move    rarg1 "\e[94m%u"
        move    rarg2 r0
        call function io.printf2

        move    rarg1 " "
        call function io.printf1

        add     r0 r0 1
        cmp     r0 r7
        jump ne label begin_loop

        move rarg1 "\e[39m" # reset
        call function io.puts
        ret
end

function recursive_fizzbuzz 1
    cmp rarg1 rarg2
    jump eq label end
    push rarg1
    push rarg2
    move r0 rarg2

    move    r3 0
    div     rjunk r1 r0 3
    cmp     r1 0
    move    rarg1 ""
    cmov eq rarg1 "\e[91mfizz"
    cmov eq r3 1
    call function io.printf1

    div     rjunk r1 r0 5
    cmp     r1 0
    move    rarg1 ""
    cmov eq rarg1 "\e[92mbuzz"
    cmov eq r3 1
    call function io.printf1
    cmp     r3 1
    jump eq 8

    move    rarg1 "\e[94m%u"
    move    rarg2 r0
    call function io.printf2

    move    rarg1 " "
    call function io.printf1
    pop rarg2
    pop rarg1
    add rarg2 rarg2 1
    tail_call function recursive_fizzbuzz

    label end
    move rarg1 "\e[39m" # reset
    call function io.puts
    bt
    ret
end
